"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const DataUrl = {
    "臺北市": "https://tcgbusfs.blob.core.windows.net/blobyoubike/YouBikeTP.json",
    "桃園市": "https://data.tycg.gov.tw/api/v1/rest/datastore/a1b4714b-3b75-4ff8-a8f2-cc377e4eaa0f?format=json",
    "臺中市": "https://datacenter.taichung.gov.tw/swagger/OpenData/34c2aa94-7924-40cc-96aa-b8d090f0ab69",
    "高雄市": "https://api.kcg.gov.tw/api/service/Get/b4dd9c40-9027-4125-8666-06bef1756092"
};
function default_1(region, station) {
    return axios_1.default.get(DataUrl[region])
        .then(res => {
        switch (region) {
            case "臺北市":
            case "臺中市":
                if (station?.length) {
                    return Object.entries(res.data.retVal).filter((data) => {
                        if (data[1].sna.includes(station)) {
                            return true;
                        }
                        return false;
                    }).map((data) => data[1]);
                }
                else {
                    return Object.entries(res.data.retVal).map((data) => data[1]);
                }
            case "桃園市":
            case "高雄市":
                if (station?.length) {
                    const data = region === "桃園市" ? res.data.result.records : res.data.data.retVal;
                    return data.filter(d => d.sna.includes(station));
                }
                else {
                    return region === "桃園市" ? res.data.result.records : res.data.data.retVal;
                }
        }
    });
}
exports.default = default_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9UeXBlU2NyaXB0L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsa0RBQTBCO0FBRTFCLE1BQU0sT0FBTyxHQUFHO0lBQ1osS0FBSyxFQUFFLG1FQUFtRTtJQUMxRSxLQUFLLEVBQUUsaUdBQWlHO0lBQ3hHLEtBQUssRUFBRSwwRkFBMEY7SUFDakcsS0FBSyxFQUFFLDZFQUE2RTtDQUN2RixDQUFBO0FBZ0ZELG1CQUFtRCxNQUFTLEVBQUUsT0FBZ0I7SUFDMUUsT0FBTyxlQUFLLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUM1QixJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDUixRQUFRLE1BQU0sRUFBRTtZQUNaLEtBQUssS0FBSyxDQUFDO1lBQ1gsS0FBSyxLQUFLO2dCQUNOLElBQUksT0FBTyxFQUFFLE1BQU0sRUFBRTtvQkFDakIsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBMkIsRUFBRSxFQUFFO3dCQUMxRSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFOzRCQUMvQixPQUFPLElBQUksQ0FBQTt5QkFDZDt3QkFDRCxPQUFPLEtBQUssQ0FBQTtvQkFDaEIsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBMkIsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7aUJBRW5EO3FCQUNJO29CQUNELE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQTJCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO2lCQUN2RjtZQUNMLEtBQUssS0FBSyxDQUFDO1lBQ1gsS0FBSyxLQUFLO2dCQUNOLElBQUksT0FBTyxFQUFFLE1BQU0sRUFBRTtvQkFDakIsTUFBTSxJQUFJLEdBQW9CLE1BQU0sS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFBO29CQUMvRixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFBO2lCQUNuRDtxQkFDSTtvQkFDRCxPQUFPLE1BQU0sS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFBO2lCQUMzRTtTQUNSO0lBQ0wsQ0FBQyxDQUFDLENBQUE7QUFDVixDQUFDO0FBN0JELDRCQTZCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcclxuXHJcbmNvbnN0IERhdGFVcmwgPSB7XHJcbiAgICBcIuiHuuWMl+W4glwiOiBcImh0dHBzOi8vdGNnYnVzZnMuYmxvYi5jb3JlLndpbmRvd3MubmV0L2Jsb2J5b3ViaWtlL1lvdUJpa2VUUC5qc29uXCIsXHJcbiAgICBcIuahg+WckuW4glwiOiBcImh0dHBzOi8vZGF0YS50eWNnLmdvdi50dy9hcGkvdjEvcmVzdC9kYXRhc3RvcmUvYTFiNDcxNGItM2I3NS00ZmY4LWE4ZjItY2MzNzdlNGVhYTBmP2Zvcm1hdD1qc29uXCIsXHJcbiAgICBcIuiHuuS4reW4glwiOiBcImh0dHBzOi8vZGF0YWNlbnRlci50YWljaHVuZy5nb3YudHcvc3dhZ2dlci9PcGVuRGF0YS8zNGMyYWE5NC03OTI0LTQwY2MtOTZhYS1iOGQwOTBmMGFiNjlcIixcclxuICAgIFwi6auY6ZuE5biCXCI6IFwiaHR0cHM6Ly9hcGkua2NnLmdvdi50dy9hcGkvc2VydmljZS9HZXQvYjRkZDljNDAtOTAyNy00MTI1LTg2NjYtMDZiZWYxNzU2MDkyXCJcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBUYWlwZWlEYXRhIHtcclxuICAgIHNubzogc3RyaW5nLFxyXG4gICAgc25hOiBzdHJpbmcsXHJcbiAgICB0b3Q6IHN0cmluZyxcclxuICAgIHNiaTogc3RyaW5nLFxyXG4gICAgc2FyZWE6IHN0cmluZyxcclxuICAgIG1kYXk6IHN0cmluZyxcclxuICAgIGxhdDogc3RyaW5nLFxyXG4gICAgbG5nOiBzdHJpbmcsXHJcbiAgICBhcjogc3RyaW5nLFxyXG4gICAgc2FyZWFlbjogc3RyaW5nLFxyXG4gICAgc25hZW46IHN0cmluZyxcclxuICAgIGFyZW46IHN0cmluZyxcclxuICAgIGJlbXA6IHN0cmluZyxcclxuICAgIGFjdDogc3RyaW5nXHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVGFvWXVhbkRhdGEge1xyXG4gICAgX2lkOiBudW1iZXIsXHJcbiAgICBzbm86IHN0cmluZyxcclxuICAgIHNuYTogc3RyaW5nLFxyXG4gICAgdG90OiBzdHJpbmcsXHJcbiAgICBzYmk6IHN0cmluZyxcclxuICAgIHNhcmVhOiBzdHJpbmcsXHJcbiAgICBtZGF5OiBzdHJpbmcsXHJcbiAgICBsYXQ6IHN0cmluZyxcclxuICAgIGxuZzogc3RyaW5nLFxyXG4gICAgYXI6IHN0cmluZyxcclxuICAgIHNhcmVhZW46IHN0cmluZyxcclxuICAgIHNuYWVuOiBzdHJpbmcsXHJcbiAgICBhcmVuOiBzdHJpbmcsXHJcbiAgICBiZW1wOiBzdHJpbmcsXHJcbiAgICBhY3Q6IHN0cmluZ1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFRhaUNodW5nRGF0YSB7XHJcbiAgICBzbm86IHN0cmluZyxcclxuICAgIHNuYTogc3RyaW5nLFxyXG4gICAgdG90OiBzdHJpbmcsXHJcbiAgICBzYmk6IHN0cmluZyxcclxuICAgIHNhcmVhOiBzdHJpbmcsXHJcbiAgICBtZGF5OiBzdHJpbmcsXHJcbiAgICBsYXQ6IHN0cmluZyxcclxuICAgIGxuZzogc3RyaW5nLFxyXG4gICAgYXI6IHN0cmluZyxcclxuICAgIHNhcmVhZW46IHN0cmluZyxcclxuICAgIHNuYWVuOiBzdHJpbmcsXHJcbiAgICBhcmVuOiBzdHJpbmcsXHJcbiAgICBiZW1wOiBzdHJpbmcsXHJcbiAgICBhY3Q6IHN0cmluZ1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEthb0hzaXVuZ0RhdGEge1xyXG4gICAgc2NpdHk6IHN0cmluZ1xyXG4gICAgc2NpdHllbjogc3RyaW5nXHJcbiAgICBzbmE6IHN0cmluZyxcclxuICAgIHNhcmVhOiBzdHJpbmcsXHJcbiAgICBhcjogc3RyaW5nLFxyXG4gICAgc25hZW46IHN0cmluZyxcclxuICAgIHNhcmVhZW46IHN0cmluZyxcclxuICAgIGFyZW46IHN0cmluZyxcclxuICAgIHNubzogc3RyaW5nLFxyXG4gICAgdG90OiBzdHJpbmcsXHJcbiAgICBzYmk6IHN0cmluZyxcclxuICAgIG1kYXk6IHN0cmluZyxcclxuICAgIGxhdDogc3RyaW5nLFxyXG4gICAgbG5nOiBzdHJpbmcsXHJcbiAgICBiZW1wOiBzdHJpbmcsXHJcbiAgICBhY3Q6IG51bWJlclxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFR5cGVEaWN0IHtcclxuICAgIFwi6Ie65YyX5biCXCI6IFRhaXBlaURhdGEsXHJcbiAgICBcIuahg+WckuW4glwiOiBUYW9ZdWFuRGF0YSxcclxuICAgIFwi6Ie65Lit5biCXCI6IFRhaUNodW5nRGF0YSxcclxuICAgIFwi6auY6ZuE5biCXCI6IEthb0hzaXVuZ0RhdGFcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gPEsgZXh0ZW5kcyBrZXlvZiBUeXBlRGljdD4ocmVnaW9uOiBLLCBzdGF0aW9uPzogc3RyaW5nKTogUHJvbWlzZTwoVHlwZURpY3RbS10pW10+IHtcclxuICAgIHJldHVybiBheGlvcy5nZXQoRGF0YVVybFtyZWdpb25dKVxyXG4gICAgICAgIC50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgICAgIHN3aXRjaCAocmVnaW9uKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwi6Ie65YyX5biCXCI6XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwi6Ie65Lit5biCXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRpb24/Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMocmVzLmRhdGEucmV0VmFsKS5maWx0ZXIoKGRhdGE6IFtzdHJpbmcsIFR5cGVEaWN0W0tdXSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFbMV0uc25hLmluY2x1ZGVzKHN0YXRpb24pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KS5tYXAoKGRhdGE6IFtzdHJpbmcsIFR5cGVEaWN0W0tdXSkgPT4gZGF0YVsxXSlcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMocmVzLmRhdGEucmV0VmFsKS5tYXAoKGRhdGE6IFtzdHJpbmcsIFR5cGVEaWN0W0tdXSkgPT4gZGF0YVsxXSlcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwi5qGD5ZyS5biCXCI6XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwi6auY6ZuE5biCXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRpb24/Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhOiAoVHlwZURpY3RbS10pW10gPSByZWdpb24gPT09IFwi5qGD5ZyS5biCXCIgPyByZXMuZGF0YS5yZXN1bHQucmVjb3JkcyA6IHJlcy5kYXRhLmRhdGEucmV0VmFsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmZpbHRlcihkID0+IGQuc25hLmluY2x1ZGVzKHN0YXRpb24pKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2lvbiA9PT0gXCLmoYPlnJLluIJcIiA/IHJlcy5kYXRhLnJlc3VsdC5yZWNvcmRzIDogcmVzLmRhdGEuZGF0YS5yZXRWYWxcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG59XHJcblxyXG4iXX0=